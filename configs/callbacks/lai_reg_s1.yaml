model_checkpoint:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: "val/loss" # name of the logged metric which determines when model is improving
  mode: "min" # "max" means higher metric value is better, can be also "min"
  save_top_k: 1 # save k best models (determined by above metric)
  save_last: True # additionaly always save model from last epoch
  verbose: False
  dirpath: ${output_dir}/checkpoints/${name}/${run_id}
  filename: "epoch_{epoch:03d}"
  auto_insert_metric_name: False

early_stopping:
  _target_: pytorch_lightning.callbacks.EarlyStopping
  monitor: "val/loss" # name of the logged metric which determines when model is improving
  mode: "min" # "max" means higher metric value is better, can be also "min"
  patience: 10 # how many validation epochs of not improving until training stops
  min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement

lr_monitor:
  _target_: pytorch_lightning.callbacks.LearningRateMonitor

model_summary:
  _target_: pytorch_lightning.callbacks.RichModelSummary
  max_depth: -1

rich_progress_bar:
  _target_: pytorch_lightning.callbacks.RichProgressBar

timer:
  _target_: pytorch_lightning.callbacks.Timer
  duration: 00:72:00:00


#laiimage:
#  _target_: mmdc_downstream.callbacks.image_callbacks.MMDCLAIS2Callback
#  save_dir: ${hydra:run.dir}
#  n_samples: 6
